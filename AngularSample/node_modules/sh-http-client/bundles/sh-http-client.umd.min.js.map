{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://sh-http-client/lib/utilities/Alert.ts","ng://sh-http-client/lib/utilities/ApiResponseBody.ts","ng://sh-http-client/lib/utilities/ApiResponse.ts","ng://sh-http-client/lib/utilities/ShMessage.ts","ng://sh-http-client/lib/constShHttpClient.ts","ng://sh-http-client/lib/services/version.service.ts","ng://sh-http-client/lib/services/alert-handler.service.ts","ng://sh-http-client/lib/services/validation-error.service.ts","ng://sh-http-client/lib/services/sh-redirect.service.ts","ng://sh-http-client/lib/services/sh-http-client.service.ts","ng://sh-http-client/lib/services/auth.service.ts","ng://sh-http-client/lib/services/navigation.service.ts","ng://sh-http-client/lib/services/logger.service.ts","ng://sh-http-client/lib/guards/auth.guard.ts","ng://sh-http-client/lib/guards/navigation.guard.ts","ng://sh-http-client/lib/sh-http-client.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","SHMessageUtl","stringFormat","text","values","_i","arguments","forEach","i","split","join","SHMessageConfirm","tslib_1.__extends","execution","finalization","creatingRecord","editingRecord","deletingRecord","updatingRecord","printingOut","editingContentWillBeLost","SHMessageFatal","systemErrorHasOccurred","SHMessageInfo","dontUseHistoryBack","btnName","confirm","fatal","info","ShHttpClientConst","STATUS_OK","RELOAD","HTTP","API_URL","VERSION_API_URL","VERSION_NO","AUTHORIZATION_TOKEN","Bearer","REDIRECT_PATH","SH_QUERY_PARAMS","VersionService","http","versions","initVersion","urls","all","map","url","_this","fetchVersion","_a","setVersionNo","getKeyUrl","s","splitByApiUrl","token","sessionStorage","getItem","get","observe","headers","Authorization","toPromise","response","redirectURL","setTimeout","location","reload","indexOf","href","applicationData","versionNo","getVersion","keyUrl","projectVersion","find","version","findIndex","item","Injectable","args","providedIn","HttpClient","AlertHandlerService","Alert","AlertHandlerSubject","Subject","AlertHandlerState","asObservable","setAlert","alertInfo","alertClear","message","type","ValidationError","ValidationErrorService","validationError","validationErrorSubject","validationErrorState","setValidationError","validationErrors","show","meesages","clearValidationError","SH_BROWSER_STORAGE","InjectionToken","factory","localStorage","USE_HASH","useHash","ShRedirectService","router","storage","isHash","defineProperty","URLSearchParams","setRedirectPath","path","query","pathparams","pathname","search","setItem","redirect","navigate","Router","Storage","decorators","Inject","ShHttpClientService","versionService","alertHandlerService","validationErrorService","redirectService","getOption","HttpHeaders","Version-No","set","accessToken","getApiResponseBody","apiResponseBody","showValidationResult","status","ApiResponseBody","alert","hasValidationErrors","isAuthenticate","option","encodeUrl","pipe","catchError","handleError","post","data","put","delete","operation","error","msg","SHMessage","encodeURI","AuthService","isAuthenticated","of","login","jigCode","tanCode","password","logout","removeItem","NavigationService","isBackClicked","getBackClicked","setBackClicked","LoggerService","isBackButton","config","param","configure","trackingPath","events","subscribe","event","NavigationEnd","urlAfterRedirects","replace","action","stopLoggingPath","AuthGuard","authService","canActivate","state","tap","NavigationGuard","navigationService","canDeactivate","component","history","pushState","ShHttpClient","NgModule","declarations","imports","FormsModule","CommonModule","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//@dynamic\r\nexport class Alert {\r\n  public type: string;\r\n  public dismissSeconds: number;\r\n  public message: string;\r\n}\r\n","import { Alert } from './Alert';\r\n\r\n//@dynamic\r\nexport class ApiResponseBody<T> {\r\n  //OK or NG\r\n  public result: string;\r\n  //NGã®å ´åã«ç»é¢ã«è¡¨ç¤ºããã¡ãã»ã¼ã¸æè¨\r\n  public message: string;\r\n  //reload or è»¢éåURL\r\n  public redirectURL: string;\r\n\r\n  //ç»é¢å¨ä½ã¸ã®ã¢ã©ã¼ãæç¡\r\n  public hasAlert: boolean;\r\n  //ç»é¢é ç®ã®å¥åå¤æ¤è¨¼ã¨ã©ã¼æç¡\r\n  public hasValidationErrors: boolean;\r\n\r\n  //ã¢ã©ã¼ãè¡¨ç¤ºå¶å¾¡åå®¹\r\n  public alert: Alert;\r\n  //å¥åå¤æ¤è¨¼è¡¨ç¤ºå¶å¾¡åå®¹\r\n  public validationErrors: any;\r\n\r\n  //ãã¼ã¿é¨\r\n  public applicationData: T;\r\n}\r\n","import { ApiResponseBody } from './ApiResponseBody';\r\n\r\n//@dynamic\r\nexport class ApiResponse<T> {\r\n  public status: number;\r\n  public body: ApiResponseBody<T>;\r\n}\r\n","\r\nexport class SHMessageUtl {\r\n  /**\r\n  * ãã³ãã¬ã¼ãæå­åãå½¢å¼ï¼{0}{1}{2}\r\n  */\r\n  public stringFormat(text: string, ...values): string {\r\n    let result = text;\r\n    values.forEach(function (value, i) {\r\n      result = result.split(`{${i}}`).join(value);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\nexport class SHMessageConfirm extends SHMessageUtl {\r\n\r\n  /**\r\n  * å®è¡ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public execution(text: string): string {\r\n    return this.stringFormat(\"{0}ãè¡ãã¾ãã\\nããããã§ããï¼\", text);\r\n  }\r\n\r\n  /**\r\n  * çµäºç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public finalization(text: string): string {\r\n    return this.stringFormat(\"{0}ãçµäºãã¾ãã\\nããããã§ããï¼\", text);\r\n  }\r\n\r\n  /**\r\n  * ç»é²ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public creatingRecord(): string {\r\n    return this.execution(\"ç»é²\");\r\n  }\r\n\r\n  /**\r\n  * ä¿®æ­£ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public editingRecord(): string {\r\n    return this.execution(\"ä¿®æ­£\");\r\n  }\r\n\r\n  /**\r\n  * åé¤ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public deletingRecord(): string {\r\n    return this.execution(\"åé¤\");\r\n  }\r\n\r\n  /**\r\n  * æ´æ°ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public updatingRecord(): string {\r\n    return this.execution(\"æ´æ°\");\r\n  }\r\n\r\n  /**\r\n  * å°å·ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public printingOut(): string {\r\n    return this.execution(\"å°å·\");\r\n  }\r\n\r\n  /**\r\n  * ç·¨éåå®¹ãå¤±ãããè­¦åã¡ãã»ã¼ã¸\r\n  */\r\n  public editingContentWillBeLost(): string {\r\n    return \"ç·¨éåå®¹ãå¤±ããã¾ãã\\nããããã§ããï¼\";\r\n  }\r\n}\r\n\r\nexport class SHMessageFatal extends SHMessageUtl {\r\n  /**\r\n  * ã·ã¹ãã ã¨ã©ã¼ã¡ãã»ã¼ã¸\r\n  */\r\n  public systemErrorHasOccurred(): string {\r\n    return \"ã·ã¹ãã ã¨ã©ã¼ãçºçãã¾ãããã·ã¹ãã ç®¡çèã«é£çµ¡ãã¦ãã ããã\";\r\n  }\r\n}\r\n\r\nexport class SHMessageInfo extends SHMessageUtl {\r\n  /**\r\n  * åã®ãã¼ã¸ã«æ»ãå ´åã®ç¢ºèªã¡ãã»ã¼ã¸\r\n  */\r\n  public dontUseHistoryBack(btnName: string): string {\r\n    return this.stringFormat(\"åã®ãã¼ã¸ã«æ»ãå ´åã{0}ãã¿ã³ããæ»ã£ã¦ãã ããã\", btnName);\r\n  }\r\n}\r\n\r\nexport class SHMessage {\r\n  constructor() { }\r\n\r\n  /**\r\n  * Confirm\r\n  */\r\n  public confirm = new SHMessageConfirm();\r\n\r\n  /**\r\n  * Fatal\r\n  */\r\n  public fatal = new SHMessageFatal();\r\n\r\n  /**\r\n  * Info\r\n  */\r\n  public info = new SHMessageInfo();\r\n\r\n}","export const ShHttpClientConst = {\r\n    STATUS_OK: 200,\r\n    RELOAD: \"reload\",\r\n    HTTP: \"http\",\r\n    API_URL: \"/api/\",\r\n    VERSION_API_URL: \"/api/Version/\",\r\n    VERSION_NO: \"Version-No\",\r\n    AUTHORIZATION_TOKEN: \"AccessToken\",\r\n    Bearer: 'Bearer ',\r\n    REDIRECT_PATH: 'REDIRECT_PATH',\r\n    SH_QUERY_PARAMS: 'SH_QUERY_PARAMS'\r\n}\r\n\r\nexport const Response = \"response\";\r\n\r\nexport const VersionNo = \"Version-No\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShHttpClientConst, Response } from '../constShHttpClient';\r\nimport { ShHttpClientService } from './sh-http-client.service';\r\nimport { ApiResponseBody } from '../utilities/ApiResponseBody';\r\nimport { async } from '@angular/core/testing';\r\nimport { ApiResponse } from '../utilities/ApiResponse';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VersionService {\r\n\r\n  //versionã®ã­ã£ãã·ã¥\r\n  private versions: { keyUrl: string, version: string }[] = [];\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * versionã®åæå\r\n   */\r\n  public async initVersion(...urls: string[]) {\r\n    if (!urls) return;\r\n    await Promise.all(urls.map(async (url) => {\r\n      const result = await this.fetchVersion(url)\r\n      this.setVersionNo(url, result)\r\n      return\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * urlããã­ã¼ãçæ\r\n   * @param url \r\n   */\r\n  private getKeyUrl(url: string) {\r\n    if (!url) return \"\";\r\n    return url.split(ShHttpClientConst.API_URL)[0] + ShHttpClientConst.VERSION_API_URL;\r\n  }\r\n  /**\r\n   * ããã¯ã¨ã³ãã®versionæå ±ãåå¾\r\n   */\r\n  public async fetchVersion(url: string): Promise<string> {\r\n    const s = this.splitByApiUrl(url);\r\n    const token = sessionStorage.getItem(`${ShHttpClientConst.AUTHORIZATION_TOKEN}`)\r\n    return this.http.get<ApiResponseBody<any>>(s, { observe: Response, headers: { \"Authorization\": token ? ShHttpClientConst.Bearer + token : ShHttpClientConst.Bearer } }).toPromise()\r\n      .then(response => {\r\n        if (response.body.redirectURL == ShHttpClientConst.RELOAD) {\r\n          setTimeout(function(){location.reload();}, 100);\r\n\r\n        }\r\n        else if ((response.body.redirectURL || \"\").indexOf(ShHttpClientConst.HTTP) != -1) {\r\n          setTimeout(function(){location.href = response.body.redirectURL;}, 100);\r\n        }\r\n        return response.body.applicationData ? response.body.applicationData.versionNo : \"\";\r\n      });\r\n  }\r\n\r\n  /**\r\n   * urlãsplitããå¤ãè¿ã\r\n   */\r\n  private splitByApiUrl(url: string) {\r\n    return url.split(ShHttpClientConst.API_URL)[0] + ShHttpClientConst.VERSION_API_URL || '';\r\n  }\r\n  /**\r\n   * ã­ã£ãã·ã¥ãã¦ããversionãURLããåå¾ãã\r\n   * @param url\r\n   */\r\n  public async getVersion(url: string): Promise<string> {\r\n    const keyUrl = this.getKeyUrl(url)\r\n    const projectVersion = this.versions\r\n      .find(value => {\r\n        return value.keyUrl === keyUrl\r\n      })\r\n    if (!projectVersion) {\r\n      const version = await this.fetchVersion(url)\r\n      // //ã­ã£ãã·ã¥ãã\r\n      this.setVersionNo(url, version)\r\n      return version;\r\n    }\r\n    return projectVersion.version;\r\n\r\n  }\r\n\r\n  /**\r\n   * åãåã£ãversionNoãã­ã£ãã·ã¥ãã\r\n   * @param url apiUrl\r\n   * @param versionNo ããã¯ã¨ã³ãã®version \r\n   */\r\n  public setVersionNo(url: string, versionNo: string) {\r\n    const keyUrl = this.getKeyUrl(url);\r\n    if (!keyUrl || !versionNo) return\r\n    const result = this.versions.findIndex(item => item.keyUrl == keyUrl);\r\n    if(result != -1) {\r\n      this.versions[result] = { keyUrl, version: versionNo };\r\n    }else {\r\n      this.versions.push({ keyUrl, version: versionNo });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Alert } from '../utilities/Alert';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertHandlerService {\r\n\r\n  private Alert: Alert = new Alert();\r\n  private AlertHandlerSubject = new Subject<Alert>();\r\n  public AlertHandlerState = this.AlertHandlerSubject.asObservable();\r\n\r\n  /**\r\n   * ã³ã³ã¹ãã©ã¯ã¿\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n  * ã¢ã©ã¼ããè¿½å ãã\r\n  * @param validationType æ¤è¨¼çµæã¿ã¤ã\r\n  * @param validationMessages æ¤è¨¼çµæã¡ãã»ã¼ã¸éå\r\n  */\r\n  public setAlert(alertInfo: Alert) {\r\n    this.Alert = alertInfo;\r\n    this.AlertHandlerSubject.next(this.Alert);\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¢ã©ã¼ããã¯ãªã¢ãã\r\n   */\r\n  public alertClear() {\r\n    this.Alert.message = \"\";\r\n    this.Alert.type = \"\";\r\n    this.AlertHandlerSubject.next(this.Alert);\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nclass ValidationError {\r\n  show: boolean\r\n  meesages: any\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidationErrorService {\r\n  private validationError = new ValidationError();\r\n  private validationErrorSubject = new Subject<ValidationError>();\r\n  public validationErrorState = this.validationErrorSubject.asObservable()\r\n  constructor() { }\r\n\r\n  public setValidationError(validationErrors: any) {\r\n    this.validationError.show = true;\r\n    this.validationError.meesages = validationErrors;\r\n    this.validationErrorSubject.next(this.validationError)\r\n  }\r\n\r\n  public clearValidationError() {\r\n    this.validationError.show = false;\r\n    this.validationError.meesages = null;\r\n    this.validationErrorSubject.next(this.validationError);\r\n  }\r\n}\r\n","import { Injectable, InjectionToken, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ShHttpClientConst } from '../constShHttpClient';\r\n\r\nexport type UseHash = {useHash: boolean}\r\n\r\nexport const SH_BROWSER_STORAGE = new InjectionToken<Storage>(`Browser Storage`, {\r\n    providedIn: `root`,\r\n    factory: () => localStorage \r\n});\r\n\r\nexport const USE_HASH = new InjectionToken<UseHash>('UseHash', {\r\n    providedIn: `root`,\r\n    factory: () => ({useHash: true})\r\n});\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ShRedirectService {\r\n    constructor(\r\n        private router: Router,\r\n        @Inject(SH_BROWSER_STORAGE) private storage: Storage,\r\n        @Inject(USE_HASH) private isHash: UseHash\r\n    ){}\r\n\r\n    get redirectPath(): string {\r\n        return this.storage.getItem(ShHttpClientConst.REDIRECT_PATH);\r\n    }\r\n    get queryParams(): URLSearchParams | null {\r\n        const query = new URLSearchParams(this.storage.getItem(ShHttpClientConst.SH_QUERY_PARAMS)) || null;\r\n        return query;\r\n    }\r\n    public setRedirectPath() {\r\n        let path = '';\r\n        let query = '';\r\n        if(this.isHash.useHash) {\r\n            const pathparams = location.href.split('#')[1].split('?');\r\n            path = pathparams[0];\r\n            query = pathparams[1] || '';\r\n        } else {\r\n            path = location.pathname;\r\n            path = location.search;\r\n        }\r\n        this.storage.setItem(ShHttpClientConst.REDIRECT_PATH, path);\r\n        this.storage.setItem(ShHttpClientConst.SH_QUERY_PARAMS, query);\r\n    }\r\n\r\n    public redirect() {\r\n        this.router.navigate([this.storage.getItem(ShHttpClientConst.REDIRECT_PATH)]);\r\n        this.storage.setItem(ShHttpClientConst.REDIRECT_PATH, '');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { catchError, map } from 'rxjs/operators'\r\nimport { ApiResponse } from '../utilities/ApiResponse';\r\nimport { VersionService } from './version.service';\r\nimport { AlertHandlerService } from './alert-handler.service';\r\nimport { ValidationErrorService } from './validation-error.service';\r\nimport { ApiResponseBody } from '../utilities/ApiResponseBody';\r\nimport { ShHttpClientConst, Response } from '../constShHttpClient';\r\nimport { SHMessage } from '../utilities/ShMessage';\r\nimport { ShRedirectService } from './sh-redirect.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShHttpClientService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private versionService: VersionService,\r\n    private alertHandlerService: AlertHandlerService,\r\n    private validationErrorService: ValidationErrorService,\r\n    private redirectService: ShRedirectService\r\n  ) { }\r\n\r\n  /**\r\n   * AccessTokenã®æç¡ãè¿ã\r\n   */\r\n  get hasToken(): boolean {\r\n    return !!sessionStorage.getItem('AccessToken');\r\n  }\r\n  /**\r\n   * httpOptionãè¿ã\r\n   * @param versionNo \r\n   */\r\n  private getOption(versionNo: string): object {\r\n    const token = sessionStorage.getItem(`${ShHttpClientConst.AUTHORIZATION_TOKEN}`)\r\n    let headers = new HttpHeaders({ \"Version-No\": versionNo })\r\n    headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n    const accessToken = token ? ShHttpClientConst.Bearer + token : ShHttpClientConst.Bearer;\r\n    headers = headers.set('Authorization', accessToken);\r\n    return { observe: Response, headers };\r\n  }\r\n  /**\r\n  * GET\r\n  * @param apiResponseBody ã¬ã¹ãã³ã¹Bodyæå ±\r\n  * @return ã¬ã¹ãã³ã¹Bodyåã®bodyå¥\r\n  */\r\n  private getApiResponseBody<T>(apiResponseBody: ApiResponse<T>, showValidationResult: boolean): ApiResponseBody<T> {\r\n    if (apiResponseBody.status != ShHttpClientConst.STATUS_OK)\r\n      return new ApiResponseBody<T>();\r\n    if (apiResponseBody.body) {\r\n      if (apiResponseBody.body.message) {\r\n        alert(apiResponseBody.body.message);\r\n      }\r\n      if (apiResponseBody.body.message) {\r\n        alert(apiResponseBody.body.message);\r\n      }\r\n      if (apiResponseBody.body.redirectURL == ShHttpClientConst.RELOAD) {\r\n        setTimeout(function(){location.reload();}, 100);\r\n      }\r\n      else if ((apiResponseBody.body.redirectURL || \"\").indexOf(ShHttpClientConst.HTTP) != -1) {\r\n        // useHashãtrueã«ãªã£ã¦ãããã¨ãåææ¡ä»¶ã§ã\r\n        this.redirectService.setRedirectPath();\r\n        setTimeout(function(){location.href = apiResponseBody.body.redirectURL}, 100);\r\n      }\r\n      if(showValidationResult) {\r\n        //ããªãã¼ã·ã§ã³å¦ç\r\n        if (apiResponseBody.body.hasValidationErrors) {\r\n          this.validationErrorService.setValidationError(apiResponseBody.body.validationErrors);\r\n        } else {\r\n          this.validationErrorService.clearValidationError();\r\n        }\r\n      }\r\n      \r\n      if (apiResponseBody.body.alert) {\r\n        //ã¢ã©ã¼ãå¦ç\r\n        this.alertHandlerService.setAlert(apiResponseBody.body.alert);\r\n      }\r\n    }\r\n\r\n    return apiResponseBody.body;\r\n  }\r\n  /**\r\n   * èªè¨¼æ¸ã¿ãã©ãã\r\n   */\r\n  private isAuthenticate(): boolean {\r\n    return !!sessionStorage.getItem(`${ShHttpClientConst.AUTHORIZATION_TOKEN}`)\r\n  }\r\n  /**\r\n  * GET\r\n  * @param url ApiUrl\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async get<T>(url: string, showValidationResult: boolean = true): Promise<ApiResponseBody<T>> {\r\n    let versionNo = \"\"\r\n    if (this.isAuthenticate()) {\r\n      versionNo = await this.versionService.getVersion(url);\r\n    }\r\n    const option: object = this.getOption(versionNo);\r\n    return this.http.get<ApiResponse<T>>(this.encodeUrl(url), option).pipe(\r\n      map(response => {\r\n        return this.getApiResponseBody<T>(response, showValidationResult);\r\n      }),\r\n      catchError(this.handleError<any>(\"get error\"))\r\n    ).toPromise();\r\n  }\r\n\r\n  /**\r\n  * POST\r\n  * @param url ApiUrl\r\n  * @param data ãã¼ã¿\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async post<T>(url: string, data: any, showValidationResult: boolean = true): Promise<ApiResponseBody<T>> {\r\n    const versionNo = await this.versionService.getVersion(url);\r\n    const option: object = this.getOption(versionNo)\r\n    return this.http.post<ApiResponse<T>>(url, data, option).pipe(\r\n      map(response => {\r\n        return this.getApiResponseBody(response, showValidationResult);\r\n      }),\r\n      catchError(this.handleError<any>(\"post error\"))\r\n    ).toPromise();\r\n\r\n  }\r\n\r\n  /**\r\n  * PUT\r\n  * @param url ApiUrl\r\n  * @param data ãã¼ã¿\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async put<T>(url: string, data: any, showValidationResult: boolean = true): Promise<ApiResponseBody<T>> {\r\n    const versionNo = await this.versionService.getVersion(url);\r\n    const option: object = this.getOption(versionNo)\r\n    return this.http.put<ApiResponse<T>>(url, data, option).pipe(\r\n      map(response => {\r\n        return this.getApiResponseBody(response, showValidationResult);\r\n      }),\r\n      catchError(this.handleError<any>(\"put error\"))\r\n    ).toPromise();\r\n\r\n  }\r\n\r\n  /**\r\n  * DELETE\r\n  * @param url ApiUrl\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async delete<T>(url: string, showValidationResult: boolean = true): Promise<ApiResponseBody<T>> {\r\n    const versionNo = await this.versionService.getVersion(url);\r\n    const option: object = this.getOption(versionNo)\r\n    return this.http.delete<ApiResponse<T>>(url, option).pipe(\r\n      map(response => {\r\n        return this.getApiResponseBody(response, showValidationResult);\r\n      }),\r\n      catchError(this.handleError<any>(\"delete error\")),\r\n    ).toPromise();\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¨ã©ã¼ãã³ãã©\r\n   * @param operation ã©ã®å¦çã§ã¨ã©ã¼ãèµ·ããã\r\n   * @param result ç©ºã®éåãæå®ç¡ããè¿ãã¦å¦çãç¶ç¶ããã\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      const msg: SHMessage = new SHMessage();\r\n      alert(msg.fatal.systemErrorHasOccurred());\r\n      throw error;\r\n    };\r\n\r\n  }\r\n  /**\r\n   * urlãã¨ã³ã³ã¼ããããã¤ã³ã¿ã¼ã¹ãã¼ã¸ç¨ã®å¯¾å¿\r\n   * @param url \r\n   */\r\n  private encodeUrl(url: string): string {\r\n    if (!url) return;\r\n    if (url.indexOf('?')) {\r\n      return encodeURI(url);\r\n    }\r\n    return url;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { of, Observable } from 'rxjs';\r\nimport { ShHttpClientConst } from '../constShHttpClient';\r\nimport { ShHttpClientService } from './sh-http-client.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private token: string;\r\n  constructor(private http: ShHttpClientService){}\r\n  /**\r\n   * èªè¨¼æ¸ã¿ãã®å¤å®\r\n   */\r\n  isAuthenticated(): Observable<boolean> {\r\n    this.token = sessionStorage.getItem(`${ShHttpClientConst.AUTHORIZATION_TOKEN}`);\r\n    if (this.token) {\r\n      return of(true);\r\n    } else {\r\n      return of(false);\r\n    }\r\n\r\n  }\r\n  /**\r\n   * èªè¨¼\r\n   * @param jigCode \r\n   * @param tanCode \r\n   * @param password \r\n   */\r\n  login(jigCode: string, tanCode: string, password: string): Observable<boolean> {\r\n    //å®éã¯ãã¼ã¿ãã¼ã¹ãªããã¦ã¼ã¶ã¼ç®¡çãããµã¼ãã¹ãªãã«åãåããã¦æ»ãå¤ãè¿ã\r\n    //ãµã¼ãã¼ã¨ã®éä¿¡ã®çµæãlacalStorageã¸ä¿å­ï¼ä»ã¯ä»®å®è£ï¼\r\n    sessionStorage.setItem(ShHttpClientConst.AUTHORIZATION_TOKEN, jigCode + tanCode + password);\r\n    //éä¿¡ã®çµæã§åå²ãã\r\n    if (true) {\r\n      return of(true);\r\n    }\r\n    else {\r\n      /**èªè¨¼å¤±ææ */\r\n      return of(false);\r\n    }\r\n  }\r\n  /**\r\n   * ã­ã°ã¢ã¦ã\r\n   * ãªãã¤ã¬ã¯ãã¯ã¬ã¼ãã§è¡ã\r\n   */\r\n  public logout(url: string) {\r\n    return this.http.get(url).then(_ => {\r\n      sessionStorage.removeItem(ShHttpClientConst.AUTHORIZATION_TOKEN);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n\r\n  //ã¦ã¼ã¶ã¼ã®ãã©ã¦ã¶ããã¯å®è¡ç¶æ\r\n  private isBackClicked: boolean = false;\r\n\r\n  /**\r\n   * ã³ã³ã¹ãã©ã¯ã¿\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n   * ã¦ã¼ã¶ã¼ã®ãã©ã¦ã¶ããã¯å®è¡ãä¿å­ãã\r\n   * @return true/false\r\n   */\r\n  public getBackClicked() {\r\n    return this.isBackClicked;\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¦ã¼ã¶ã¼ã®ãã©ã¦ã¶ããã¯å®è¡ãä¿å­ãã\r\n   * @param isBackClicked\r\n   */\r\n  public setBackClicked(isBackClicked) {\r\n    this.isBackClicked = isBackClicked;\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShHttpClientService } from './sh-http-client.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n\r\ntype logParam = {\r\n  path: string\r\n  action?: string\r\n}\r\ntype config = {\r\n  url :string\r\n  useHash: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerService {\r\n  private isBackButton = false;\r\n  private config: config = {url: '', useHash: true};\r\n  constructor(\r\n    private http: ShHttpClientService,\r\n    private router: Router,\r\n  ) { }\r\n  /**\r\n   * logApiã¸ãªã¯ã¨ã¹ã\r\n   * \r\n   */\r\n  private async push(param: logParam) {\r\n    return this.http.post(this.config.url, param);\r\n  }\r\n  /**\r\n   * è¨­å®ãæ´æ°\r\n   */\r\n  public configure(config : Partial<config>) {\r\n    const { url, useHash } = config;\r\n    if(url) {\r\n      this.config.url = url;\r\n    }\r\n    if(useHash !== undefined && useHash !== null) {\r\n      this.config.useHash = useHash;\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * ç»é¢é·ç§»ãçºçãããã³ã«logging\r\n   */\r\n  public trackingPath() {\r\n    this.router.events.subscribe(async (event) => {\r\n      if(event instanceof NavigationEnd){\r\n        if(this.isBackButton){\r\n          this.isBackButton = false;\r\n          return;\r\n        }\r\n        const path = this.config.useHash \r\n          ? `#${event.urlAfterRedirects}`\r\n          : event.urlAfterRedirects.replace('/', '');\r\n        const result = await this.push({path});\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * actionlog pathã¯å¿é ã®ããå¿ãéããã\r\n   */\r\n  public async action(action: string) {\r\n    const path = this.config.useHash\r\n      ? `#${this.router.url}`\r\n      :  this.router.url.replace('/', '');\r\n    await this.push({path, action});\r\n  }\r\n  /**\r\n   * \r\n   */\r\n  public stopLoggingPath() {\r\n    this.isBackButton = true;\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators'\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.authService.isAuthenticated().pipe(\r\n      tap((result)=> {\r\n        if(!result){\r\n          alert(\"èªè¨¼ã«å¤±æãã¾ãããã¡ã¼ã«ã¢ãã¬ã¹ã¨ãã¹ã¯ã¼ããååº¦ç¢ºèªãã¦ãã ããã\");\r\n          return\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { NavigationService } from '../services/navigation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationGuard implements CanDeactivate<any>{\r\n  /**\r\n  * ã³ã³ã¹ãã©ã¯ã¿\r\n  */\r\n  constructor(private navigationService: NavigationService) { }\r\n\r\n  /**\r\n  * ç»é¢é·ç§»åå¦ç\r\n  * @return true/false\r\n  */\r\n  public canDeactivate(component: any) {\r\n    if (this.navigationService.getBackClicked()) {\r\n      this.navigationService.setBackClicked(false);\r\n      history.pushState(null, null, location.href);\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShRedirectService, SH_BROWSER_STORAGE } from './services/sh-redirect.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n  ],\r\n  exports: [],\r\n  providers: [\r\n  ]\r\n})\r\nexport class ShHttpClient { }\r\n"]}