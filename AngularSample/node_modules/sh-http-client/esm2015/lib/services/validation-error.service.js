/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
class ValidationError {
}
if (false) {
    /** @type {?} */
    ValidationError.prototype.show;
    /** @type {?} */
    ValidationError.prototype.meesages;
}
export class ValidationErrorService {
    constructor() {
        this.validationError = new ValidationError();
        this.validationErrorSubject = new Subject();
        this.validationErrorState = this.validationErrorSubject.asObservable();
    }
    /**
     * @param {?} validationErrors
     * @return {?}
     */
    setValidationError(validationErrors) {
        this.validationError.show = true;
        this.validationError.meesages = validationErrors;
        this.validationErrorSubject.next(this.validationError);
    }
    /**
     * @return {?}
     */
    clearValidationError() {
        this.validationError.show = false;
        this.validationError.meesages = null;
        this.validationErrorSubject.next(this.validationError);
    }
}
ValidationErrorService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
ValidationErrorService.ctorParameters = () => [];
/** @nocollapse */ ValidationErrorService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function ValidationErrorService_Factory() { return new ValidationErrorService(); }, token: ValidationErrorService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    ValidationErrorService.prototype.validationError;
    /**
     * @type {?}
     * @private
     */
    ValidationErrorService.prototype.validationErrorSubject;
    /** @type {?} */
    ValidationErrorService.prototype.validationErrorState;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGlvbi1lcnJvci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vc2gtaHR0cC1jbGllbnQvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvdmFsaWRhdGlvbi1lcnJvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBRS9CLE1BQU0sZUFBZTtDQUdwQjs7O0lBRkMsK0JBQWE7O0lBQ2IsbUNBQWE7O0FBTWYsTUFBTSxPQUFPLHNCQUFzQjtJQUlqQztRQUhRLG9CQUFlLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQztRQUN4QywyQkFBc0IsR0FBRyxJQUFJLE9BQU8sRUFBbUIsQ0FBQztRQUN6RCx5QkFBb0IsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsWUFBWSxFQUFFLENBQUE7SUFDeEQsQ0FBQzs7Ozs7SUFFVixrQkFBa0IsQ0FBQyxnQkFBcUI7UUFDN0MsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxHQUFHLGdCQUFnQixDQUFDO1FBQ2pELElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFBO0lBQ3hELENBQUM7Ozs7SUFFTSxvQkFBb0I7UUFDekIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7WUFuQkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7Ozs7Ozs7O0lBRUMsaURBQWdEOzs7OztJQUNoRCx3REFBZ0U7O0lBQ2hFLHNEQUF3RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuY2xhc3MgVmFsaWRhdGlvbkVycm9yIHtcclxuICBzaG93OiBib29sZWFuXHJcbiAgbWVlc2FnZXM6IGFueVxyXG59XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBWYWxpZGF0aW9uRXJyb3JTZXJ2aWNlIHtcclxuICBwcml2YXRlIHZhbGlkYXRpb25FcnJvciA9IG5ldyBWYWxpZGF0aW9uRXJyb3IoKTtcclxuICBwcml2YXRlIHZhbGlkYXRpb25FcnJvclN1YmplY3QgPSBuZXcgU3ViamVjdDxWYWxpZGF0aW9uRXJyb3I+KCk7XHJcbiAgcHVibGljIHZhbGlkYXRpb25FcnJvclN0YXRlID0gdGhpcy52YWxpZGF0aW9uRXJyb3JTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgcHVibGljIHNldFZhbGlkYXRpb25FcnJvcih2YWxpZGF0aW9uRXJyb3JzOiBhbnkpIHtcclxuICAgIHRoaXMudmFsaWRhdGlvbkVycm9yLnNob3cgPSB0cnVlO1xyXG4gICAgdGhpcy52YWxpZGF0aW9uRXJyb3IubWVlc2FnZXMgPSB2YWxpZGF0aW9uRXJyb3JzO1xyXG4gICAgdGhpcy52YWxpZGF0aW9uRXJyb3JTdWJqZWN0Lm5leHQodGhpcy52YWxpZGF0aW9uRXJyb3IpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2xlYXJWYWxpZGF0aW9uRXJyb3IoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRpb25FcnJvci5zaG93ID0gZmFsc2U7XHJcbiAgICB0aGlzLnZhbGlkYXRpb25FcnJvci5tZWVzYWdlcyA9IG51bGw7XHJcbiAgICB0aGlzLnZhbGlkYXRpb25FcnJvclN1YmplY3QubmV4dCh0aGlzLnZhbGlkYXRpb25FcnJvcik7XHJcbiAgfVxyXG59XHJcbiJdfQ==