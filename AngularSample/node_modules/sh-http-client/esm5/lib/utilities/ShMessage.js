/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
var SHMessageUtl = /** @class */ (function () {
    function SHMessageUtl() {
    }
    /**
    * テンプレート文字列　形式：{0}{1}{2}
    */
    /**
     * テンプレート文字列　形式：{0}{1}{2}
     * @param {?} text
     * @param {...?} values
     * @return {?}
     */
    SHMessageUtl.prototype.stringFormat = /**
     * テンプレート文字列　形式：{0}{1}{2}
     * @param {?} text
     * @param {...?} values
     * @return {?}
     */
    function (text) {
        var values = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            values[_i - 1] = arguments[_i];
        }
        /** @type {?} */
        var result = text;
        values.forEach((/**
         * @param {?} value
         * @param {?} i
         * @return {?}
         */
        function (value, i) {
            result = result.split("{" + i + "}").join(value);
        }));
        return result;
    };
    return SHMessageUtl;
}());
export { SHMessageUtl };
var SHMessageConfirm = /** @class */ (function (_super) {
    tslib_1.__extends(SHMessageConfirm, _super);
    function SHMessageConfirm() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
    * 実行確認メッセージ
    */
    /**
     * 実行確認メッセージ
     * @param {?} text
     * @return {?}
     */
    SHMessageConfirm.prototype.execution = /**
     * 実行確認メッセージ
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return this.stringFormat("{0}を行います。\nよろしいですか？", text);
    };
    /**
    * 終了確認メッセージ
    */
    /**
     * 終了確認メッセージ
     * @param {?} text
     * @return {?}
     */
    SHMessageConfirm.prototype.finalization = /**
     * 終了確認メッセージ
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return this.stringFormat("{0}を終了します。\nよろしいですか？", text);
    };
    /**
    * 登録確認メッセージ
    */
    /**
     * 登録確認メッセージ
     * @return {?}
     */
    SHMessageConfirm.prototype.creatingRecord = /**
     * 登録確認メッセージ
     * @return {?}
     */
    function () {
        return this.execution("登録");
    };
    /**
    * 修正確認メッセージ
    */
    /**
     * 修正確認メッセージ
     * @return {?}
     */
    SHMessageConfirm.prototype.editingRecord = /**
     * 修正確認メッセージ
     * @return {?}
     */
    function () {
        return this.execution("修正");
    };
    /**
    * 削除確認メッセージ
    */
    /**
     * 削除確認メッセージ
     * @return {?}
     */
    SHMessageConfirm.prototype.deletingRecord = /**
     * 削除確認メッセージ
     * @return {?}
     */
    function () {
        return this.execution("削除");
    };
    /**
    * 更新確認メッセージ
    */
    /**
     * 更新確認メッセージ
     * @return {?}
     */
    SHMessageConfirm.prototype.updatingRecord = /**
     * 更新確認メッセージ
     * @return {?}
     */
    function () {
        return this.execution("更新");
    };
    /**
    * 印刷確認メッセージ
    */
    /**
     * 印刷確認メッセージ
     * @return {?}
     */
    SHMessageConfirm.prototype.printingOut = /**
     * 印刷確認メッセージ
     * @return {?}
     */
    function () {
        return this.execution("印刷");
    };
    /**
    * 編集内容が失われる警告メッセージ
    */
    /**
     * 編集内容が失われる警告メッセージ
     * @return {?}
     */
    SHMessageConfirm.prototype.editingContentWillBeLost = /**
     * 編集内容が失われる警告メッセージ
     * @return {?}
     */
    function () {
        return "編集内容が失われます。\nよろしいですか？";
    };
    return SHMessageConfirm;
}(SHMessageUtl));
export { SHMessageConfirm };
var SHMessageFatal = /** @class */ (function (_super) {
    tslib_1.__extends(SHMessageFatal, _super);
    function SHMessageFatal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
    * システムエラーメッセージ
    */
    /**
     * システムエラーメッセージ
     * @return {?}
     */
    SHMessageFatal.prototype.systemErrorHasOccurred = /**
     * システムエラーメッセージ
     * @return {?}
     */
    function () {
        return "システムエラーが発生しました。システム管理者に連絡してください。";
    };
    return SHMessageFatal;
}(SHMessageUtl));
export { SHMessageFatal };
var SHMessageInfo = /** @class */ (function (_super) {
    tslib_1.__extends(SHMessageInfo, _super);
    function SHMessageInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
    * 前のページに戻る場合の確認メッセージ
    */
    /**
     * 前のページに戻る場合の確認メッセージ
     * @param {?} btnName
     * @return {?}
     */
    SHMessageInfo.prototype.dontUseHistoryBack = /**
     * 前のページに戻る場合の確認メッセージ
     * @param {?} btnName
     * @return {?}
     */
    function (btnName) {
        return this.stringFormat("前のページに戻る場合、{0}ボタンから戻ってください。", btnName);
    };
    return SHMessageInfo;
}(SHMessageUtl));
export { SHMessageInfo };
var SHMessage = /** @class */ (function () {
    function SHMessage() {
        /**
         * Confirm
         */
        this.confirm = new SHMessageConfirm();
        /**
         * Fatal
         */
        this.fatal = new SHMessageFatal();
        /**
         * Info
         */
        this.info = new SHMessageInfo();
    }
    return SHMessage;
}());
export { SHMessage };
if (false) {
    /**
     * Confirm
     * @type {?}
     */
    SHMessage.prototype.confirm;
    /**
     * Fatal
     * @type {?}
     */
    SHMessage.prototype.fatal;
    /**
     * Info
     * @type {?}
     */
    SHMessage.prototype.info;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2hNZXNzYWdlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vc2gtaHR0cC1jbGllbnQvIiwic291cmNlcyI6WyJsaWIvdXRpbGl0aWVzL1NoTWVzc2FnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBO0lBQUE7SUFXQSxDQUFDO0lBVkM7O01BRUU7Ozs7Ozs7SUFDSyxtQ0FBWTs7Ozs7O0lBQW5CLFVBQW9CLElBQVk7UUFBRSxnQkFBUzthQUFULFVBQVMsRUFBVCxxQkFBUyxFQUFULElBQVM7WUFBVCwrQkFBUzs7O1lBQ3JDLE1BQU0sR0FBRyxJQUFJO1FBQ2pCLE1BQU0sQ0FBQyxPQUFPOzs7OztRQUFDLFVBQVUsS0FBSyxFQUFFLENBQUM7WUFDL0IsTUFBTSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBSSxDQUFDLE1BQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5QyxDQUFDLEVBQUMsQ0FBQztRQUNILE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUFYRCxJQVdDOztBQUVEO0lBQXNDLDRDQUFZO0lBQWxEOztJQXlEQSxDQUFDO0lBdkRDOztNQUVFOzs7Ozs7SUFDSyxvQ0FBUzs7Ozs7SUFBaEIsVUFBaUIsSUFBWTtRQUMzQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVEOztNQUVFOzs7Ozs7SUFDSyx1Q0FBWTs7Ozs7SUFBbkIsVUFBb0IsSUFBWTtRQUM5QixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVEOztNQUVFOzs7OztJQUNLLHlDQUFjOzs7O0lBQXJCO1FBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRDs7TUFFRTs7Ozs7SUFDSyx3Q0FBYTs7OztJQUFwQjtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQ7O01BRUU7Ozs7O0lBQ0sseUNBQWM7Ozs7SUFBckI7UUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVEOztNQUVFOzs7OztJQUNLLHlDQUFjOzs7O0lBQXJCO1FBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRDs7TUFFRTs7Ozs7SUFDSyxzQ0FBVzs7OztJQUFsQjtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQ7O01BRUU7Ozs7O0lBQ0ssbURBQXdCOzs7O0lBQS9CO1FBQ0UsT0FBTyx1QkFBdUIsQ0FBQztJQUNqQyxDQUFDO0lBQ0gsdUJBQUM7QUFBRCxDQUFDLEFBekRELENBQXNDLFlBQVksR0F5RGpEOztBQUVEO0lBQW9DLDBDQUFZO0lBQWhEOztJQU9BLENBQUM7SUFOQzs7TUFFRTs7Ozs7SUFDSywrQ0FBc0I7Ozs7SUFBN0I7UUFDRSxPQUFPLGtDQUFrQyxDQUFDO0lBQzVDLENBQUM7SUFDSCxxQkFBQztBQUFELENBQUMsQUFQRCxDQUFvQyxZQUFZLEdBTy9DOztBQUVEO0lBQW1DLHlDQUFZO0lBQS9DOztJQU9BLENBQUM7SUFOQzs7TUFFRTs7Ozs7O0lBQ0ssMENBQWtCOzs7OztJQUF6QixVQUEwQixPQUFlO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyw2QkFBNkIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBQ0gsb0JBQUM7QUFBRCxDQUFDLEFBUEQsQ0FBbUMsWUFBWSxHQU85Qzs7QUFFRDtJQUNFOzs7O1FBS08sWUFBTyxHQUFHLElBQUksZ0JBQWdCLEVBQUUsQ0FBQzs7OztRQUtqQyxVQUFLLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQzs7OztRQUs3QixTQUFJLEdBQUcsSUFBSSxhQUFhLEVBQUUsQ0FBQztJQWZsQixDQUFDO0lBaUJuQixnQkFBQztBQUFELENBQUMsQUFsQkQsSUFrQkM7Ozs7Ozs7SUFaQyw0QkFBd0M7Ozs7O0lBS3hDLDBCQUFvQzs7Ozs7SUFLcEMseUJBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmV4cG9ydCBjbGFzcyBTSE1lc3NhZ2VVdGwge1xyXG4gIC8qKlxyXG4gICog44OG44Oz44OX44Os44O844OI5paH5a2X5YiX44CA5b2i5byP77yaezB9ezF9ezJ9XHJcbiAgKi9cclxuICBwdWJsaWMgc3RyaW5nRm9ybWF0KHRleHQ6IHN0cmluZywgLi4udmFsdWVzKTogc3RyaW5nIHtcclxuICAgIGxldCByZXN1bHQgPSB0ZXh0O1xyXG4gICAgdmFsdWVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBpKSB7XHJcbiAgICAgIHJlc3VsdCA9IHJlc3VsdC5zcGxpdChgeyR7aX19YCkuam9pbih2YWx1ZSk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU0hNZXNzYWdlQ29uZmlybSBleHRlbmRzIFNITWVzc2FnZVV0bCB7XHJcblxyXG4gIC8qKlxyXG4gICog5a6f6KGM56K66KqN44Oh44OD44K744O844K4XHJcbiAgKi9cclxuICBwdWJsaWMgZXhlY3V0aW9uKHRleHQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5zdHJpbmdGb3JtYXQoXCJ7MH3jgpLooYzjgYTjgb7jgZnjgIJcXG7jgojjgo3jgZfjgYTjgafjgZnjgYvvvJ9cIiwgdGV4dCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIOe1guS6hueiuuiqjeODoeODg+OCu+ODvOOCuFxyXG4gICovXHJcbiAgcHVibGljIGZpbmFsaXphdGlvbih0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuc3RyaW5nRm9ybWF0KFwiezB944KS57WC5LqG44GX44G+44GZ44CCXFxu44KI44KN44GX44GE44Gn44GZ44GL77yfXCIsIHRleHQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiDnmbvpjLLnorroqo3jg6Hjg4Pjgrvjg7zjgrhcclxuICAqL1xyXG4gIHB1YmxpYyBjcmVhdGluZ1JlY29yZCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuZXhlY3V0aW9uKFwi55m76YyyXCIpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiDkv67mraPnorroqo3jg6Hjg4Pjgrvjg7zjgrhcclxuICAqL1xyXG4gIHB1YmxpYyBlZGl0aW5nUmVjb3JkKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5leGVjdXRpb24oXCLkv67mraNcIik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIOWJiumZpOeiuuiqjeODoeODg+OCu+ODvOOCuFxyXG4gICovXHJcbiAgcHVibGljIGRlbGV0aW5nUmVjb3JkKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5leGVjdXRpb24oXCLliYrpmaRcIik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIOabtOaWsOeiuuiqjeODoeODg+OCu+ODvOOCuFxyXG4gICovXHJcbiAgcHVibGljIHVwZGF0aW5nUmVjb3JkKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5leGVjdXRpb24oXCLmm7TmlrBcIik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIOWNsOWIt+eiuuiqjeODoeODg+OCu+ODvOOCuFxyXG4gICovXHJcbiAgcHVibGljIHByaW50aW5nT3V0KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5leGVjdXRpb24oXCLljbDliLdcIik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIOe3qOmbhuWGheWuueOBjOWkseOCj+OCjOOCi+itpuWRiuODoeODg+OCu+ODvOOCuFxyXG4gICovXHJcbiAgcHVibGljIGVkaXRpbmdDb250ZW50V2lsbEJlTG9zdCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIFwi57eo6ZuG5YaF5a6544GM5aSx44KP44KM44G+44GZ44CCXFxu44KI44KN44GX44GE44Gn44GZ44GL77yfXCI7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU0hNZXNzYWdlRmF0YWwgZXh0ZW5kcyBTSE1lc3NhZ2VVdGwge1xyXG4gIC8qKlxyXG4gICog44K344K544OG44Og44Ko44Op44O844Oh44OD44K744O844K4XHJcbiAgKi9cclxuICBwdWJsaWMgc3lzdGVtRXJyb3JIYXNPY2N1cnJlZCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIFwi44K344K544OG44Og44Ko44Op44O844GM55m655Sf44GX44G+44GX44Gf44CC44K344K544OG44Og566h55CG6ICF44Gr6YCj57Wh44GX44Gm44GP44Gg44GV44GE44CCXCI7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU0hNZXNzYWdlSW5mbyBleHRlbmRzIFNITWVzc2FnZVV0bCB7XHJcbiAgLyoqXHJcbiAgKiDliY3jga7jg5rjg7zjgrjjgavmiLvjgovloLTlkIjjga7norroqo3jg6Hjg4Pjgrvjg7zjgrhcclxuICAqL1xyXG4gIHB1YmxpYyBkb250VXNlSGlzdG9yeUJhY2soYnRuTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLnN0cmluZ0Zvcm1hdChcIuWJjeOBruODmuODvOOCuOOBq+aIu+OCi+WgtOWQiOOAgXswfeODnOOCv+ODs+OBi+OCieaIu+OBo+OBpuOBj+OBoOOBleOBhOOAglwiLCBidG5OYW1lKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBTSE1lc3NhZ2Uge1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIC8qKlxyXG4gICogQ29uZmlybVxyXG4gICovXHJcbiAgcHVibGljIGNvbmZpcm0gPSBuZXcgU0hNZXNzYWdlQ29uZmlybSgpO1xyXG5cclxuICAvKipcclxuICAqIEZhdGFsXHJcbiAgKi9cclxuICBwdWJsaWMgZmF0YWwgPSBuZXcgU0hNZXNzYWdlRmF0YWwoKTtcclxuXHJcbiAgLyoqXHJcbiAgKiBJbmZvXHJcbiAgKi9cclxuICBwdWJsaWMgaW5mbyA9IG5ldyBTSE1lc3NhZ2VJbmZvKCk7XHJcblxyXG59Il19