/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { catchError, map } from 'rxjs/operators';
import { VersionService } from './version.service';
import { AlertHandlerService } from './alert-handler.service';
import { ValidationErrorService } from './validation-error.service';
import { ApiResponseBody } from '../utilities/ApiResponseBody';
import { ShHttpClientConst, Response } from '../constShHttpClient';
import { SHMessage } from '../utilities/ShMessage';
import { ShRedirectService } from './sh-redirect.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "./version.service";
import * as i3 from "./alert-handler.service";
import * as i4 from "./validation-error.service";
import * as i5 from "./sh-redirect.service";
var ShHttpClientService = /** @class */ (function () {
    function ShHttpClientService(http, versionService, alertHandlerService, validationErrorService, redirectService) {
        this.http = http;
        this.versionService = versionService;
        this.alertHandlerService = alertHandlerService;
        this.validationErrorService = validationErrorService;
        this.redirectService = redirectService;
    }
    Object.defineProperty(ShHttpClientService.prototype, "hasToken", {
        /**
         * AccessTokenの有無を返す
         */
        get: /**
         * AccessTokenの有無を返す
         * @return {?}
         */
        function () {
            return !!sessionStorage.getItem('AccessToken');
        },
        enumerable: true,
        configurable: true
    });
    /**
     * httpOptionを返す
     * @param versionNo
     */
    /**
     * httpOptionを返す
     * @private
     * @param {?} versionNo
     * @return {?}
     */
    ShHttpClientService.prototype.getOption = /**
     * httpOptionを返す
     * @private
     * @param {?} versionNo
     * @return {?}
     */
    function (versionNo) {
        /** @type {?} */
        var token = sessionStorage.getItem("" + ShHttpClientConst.AUTHORIZATION_TOKEN);
        /** @type {?} */
        var headers = new HttpHeaders({ "Version-No": versionNo });
        headers = headers.set('Content-Type', 'application/json; charset=utf-8');
        /** @type {?} */
        var accessToken = token ? ShHttpClientConst.Bearer + token : ShHttpClientConst.Bearer;
        headers = headers.set('Authorization', accessToken);
        return { observe: Response, headers: headers };
    };
    /**
    * GET
    * @param apiResponseBody レスポンスBody情報
    * @return レスポンスBody内のbody句
    */
    /**
     * GET
     * @private
     * @template T
     * @param {?} apiResponseBody レスポンスBody情報
     * @param {?} showValidationResult
     * @return {?} レスポンスBody内のbody句
     */
    ShHttpClientService.prototype.getApiResponseBody = /**
     * GET
     * @private
     * @template T
     * @param {?} apiResponseBody レスポンスBody情報
     * @param {?} showValidationResult
     * @return {?} レスポンスBody内のbody句
     */
    function (apiResponseBody, showValidationResult) {
        if (apiResponseBody.status != ShHttpClientConst.STATUS_OK)
            return new ApiResponseBody();
        if (apiResponseBody.body) {
            if (apiResponseBody.body.message) {
                alert(apiResponseBody.body.message);
            }
            if (apiResponseBody.body.message) {
                alert(apiResponseBody.body.message);
            }
            if (apiResponseBody.body.redirectURL == ShHttpClientConst.RELOAD) {
                setTimeout((/**
                 * @return {?}
                 */
                function () { location.reload(); }), 100);
            }
            else if ((apiResponseBody.body.redirectURL || "").indexOf(ShHttpClientConst.HTTP) != -1) {
                // useHashがtrueになっていることが前提条件です
                this.redirectService.setRedirectPath();
                setTimeout((/**
                 * @return {?}
                 */
                function () { location.href = apiResponseBody.body.redirectURL; }), 100);
            }
            if (showValidationResult) {
                //バリデーション処理
                if (apiResponseBody.body.hasValidationErrors) {
                    this.validationErrorService.setValidationError(apiResponseBody.body.validationErrors);
                }
                else {
                    this.validationErrorService.clearValidationError();
                }
            }
            if (apiResponseBody.body.alert) {
                //アラート処理
                this.alertHandlerService.setAlert(apiResponseBody.body.alert);
            }
        }
        return apiResponseBody.body;
    };
    /**
     * 認証済みかどうか
     */
    /**
     * 認証済みかどうか
     * @private
     * @return {?}
     */
    ShHttpClientService.prototype.isAuthenticate = /**
     * 認証済みかどうか
     * @private
     * @return {?}
     */
    function () {
        return !!sessionStorage.getItem("" + ShHttpClientConst.AUTHORIZATION_TOKEN);
    };
    /**
    * GET
    * @param url ApiUrl
    * @return API返却結果
    */
    /**
     * GET
     * @template T
     * @param {?} url ApiUrl
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    ShHttpClientService.prototype.get = /**
     * GET
     * @template T
     * @param {?} url ApiUrl
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    function (url, showValidationResult) {
        if (showValidationResult === void 0) { showValidationResult = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var versionNo, option;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        versionNo = "";
                        if (!this.isAuthenticate()) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.versionService.getVersion(url)];
                    case 1:
                        versionNo = _a.sent();
                        _a.label = 2;
                    case 2:
                        option = this.getOption(versionNo);
                        return [2 /*return*/, this.http.get(this.encodeUrl(url), option).pipe(map((/**
                             * @param {?} response
                             * @return {?}
                             */
                            function (response) {
                                return _this.getApiResponseBody(response, showValidationResult);
                            })), catchError(this.handleError("get error"))).toPromise()];
                }
            });
        });
    };
    /**
    * POST
    * @param url ApiUrl
    * @param data データ
    * @return API返却結果
    */
    /**
     * POST
     * @template T
     * @param {?} url ApiUrl
     * @param {?} data データ
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    ShHttpClientService.prototype.post = /**
     * POST
     * @template T
     * @param {?} url ApiUrl
     * @param {?} data データ
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    function (url, data, showValidationResult) {
        if (showValidationResult === void 0) { showValidationResult = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var versionNo, option;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.versionService.getVersion(url)];
                    case 1:
                        versionNo = _a.sent();
                        option = this.getOption(versionNo);
                        return [2 /*return*/, this.http.post(url, data, option).pipe(map((/**
                             * @param {?} response
                             * @return {?}
                             */
                            function (response) {
                                return _this.getApiResponseBody(response, showValidationResult);
                            })), catchError(this.handleError("post error"))).toPromise()];
                }
            });
        });
    };
    /**
    * PUT
    * @param url ApiUrl
    * @param data データ
    * @return API返却結果
    */
    /**
     * PUT
     * @template T
     * @param {?} url ApiUrl
     * @param {?} data データ
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    ShHttpClientService.prototype.put = /**
     * PUT
     * @template T
     * @param {?} url ApiUrl
     * @param {?} data データ
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    function (url, data, showValidationResult) {
        if (showValidationResult === void 0) { showValidationResult = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var versionNo, option;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.versionService.getVersion(url)];
                    case 1:
                        versionNo = _a.sent();
                        option = this.getOption(versionNo);
                        return [2 /*return*/, this.http.put(url, data, option).pipe(map((/**
                             * @param {?} response
                             * @return {?}
                             */
                            function (response) {
                                return _this.getApiResponseBody(response, showValidationResult);
                            })), catchError(this.handleError("put error"))).toPromise()];
                }
            });
        });
    };
    /**
    * DELETE
    * @param url ApiUrl
    * @return API返却結果
    */
    /**
     * DELETE
     * @template T
     * @param {?} url ApiUrl
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    ShHttpClientService.prototype.delete = /**
     * DELETE
     * @template T
     * @param {?} url ApiUrl
     * @param {?=} showValidationResult
     * @return {?} API返却結果
     */
    function (url, showValidationResult) {
        if (showValidationResult === void 0) { showValidationResult = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var versionNo, option;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.versionService.getVersion(url)];
                    case 1:
                        versionNo = _a.sent();
                        option = this.getOption(versionNo);
                        return [2 /*return*/, this.http.delete(url, option).pipe(map((/**
                             * @param {?} response
                             * @return {?}
                             */
                            function (response) {
                                return _this.getApiResponseBody(response, showValidationResult);
                            })), catchError(this.handleError("delete error"))).toPromise()];
                }
            });
        });
    };
    /**
     * エラーハンドラ
     * @param operation どの処理でエラーが起きたか
     * @param result 空の配列か指定無しを返して処理を継続させる
     */
    /**
     * エラーハンドラ
     * @private
     * @template T
     * @param {?=} operation どの処理でエラーが起きたか
     * @param {?=} result 空の配列か指定無しを返して処理を継続させる
     * @return {?}
     */
    ShHttpClientService.prototype.handleError = /**
     * エラーハンドラ
     * @private
     * @template T
     * @param {?=} operation どの処理でエラーが起きたか
     * @param {?=} result 空の配列か指定無しを返して処理を継続させる
     * @return {?}
     */
    function (operation, result) {
        if (operation === void 0) { operation = 'operation'; }
        return (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            /** @type {?} */
            var msg = new SHMessage();
            alert(msg.fatal.systemErrorHasOccurred());
            throw error;
        });
    };
    /**
     * urlをエンコードする。インターステージ用の対応
     * @param url
     */
    /**
     * urlをエンコードする。インターステージ用の対応
     * @private
     * @param {?} url
     * @return {?}
     */
    ShHttpClientService.prototype.encodeUrl = /**
     * urlをエンコードする。インターステージ用の対応
     * @private
     * @param {?} url
     * @return {?}
     */
    function (url) {
        if (!url)
            return;
        if (url.indexOf('?')) {
            return encodeURI(url);
        }
        return url;
    };
    ShHttpClientService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ShHttpClientService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: VersionService },
        { type: AlertHandlerService },
        { type: ValidationErrorService },
        { type: ShRedirectService }
    ]; };
    /** @nocollapse */ ShHttpClientService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function ShHttpClientService_Factory() { return new ShHttpClientService(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.VersionService), i0.ɵɵinject(i3.AlertHandlerService), i0.ɵɵinject(i4.ValidationErrorService), i0.ɵɵinject(i5.ShRedirectService)); }, token: ShHttpClientService, providedIn: "root" });
    return ShHttpClientService;
}());
export { ShHttpClientService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ShHttpClientService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    ShHttpClientService.prototype.versionService;
    /**
     * @type {?}
     * @private
     */
    ShHttpClientService.prototype.alertHandlerService;
    /**
     * @type {?}
     * @private
     */
    ShHttpClientService.prototype.validationErrorService;
    /**
     * @type {?}
     * @private
     */
    ShHttpClientService.prototype.redirectService;
}
//# sourceMappingURL=data:application/json;base64,